name: Tests

env:
  PYTHON_VERSION: "3.11"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.12", os: "ubuntu-latest", session: "pip-audit" }
          - { python: "3.11", os: "ubuntu-latest", session: "pip-audit" }
          - { python: "3.10", os: "ubuntu-latest", session: "pip-audit" }
          - { python: "3.9", os: "ubuntu-latest", session: "pip-audit" }
          - { python: "3.8", os: "ubuntu-latest", session: "pip-audit" }
          - { python: "3.12", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.11", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.10", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.9", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.8", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.12", os: "ubuntu-latest", session: "test" }
          - { python: "3.11", os: "ubuntu-latest", session: "test" }
          - { python: "3.10", os: "ubuntu-latest", session: "test" }
          - { python: "3.9", os: "ubuntu-latest", session: "test" }
          - { python: "3.8", os: "ubuntu-latest", session: "test" }

    env:
      NOXSESSION: ${{ matrix.session }}
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4.7.1
        id: setup-python
        with:
          python-version: ${{ matrix.python }}
          check-latest: true

      - name: Upgrade python environment
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          poetry --version

      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry rich
          nox --version

      - name: Compute pre-commit cache key
        if: matrix.session == 'pre-commit'
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import os
          import sys

          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])

          with open(os.environ["GITHUB_OUTPUT"], mode="w") as github_output:
              print("name=result::{}".format(result), file=github_output)

      - name: Restore pre-commit cache
        uses: actions/cache@v4
        if: matrix.session == 'pre-commit'
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-"

      - name: Run Nox
        env:
          WHITEPRINT_TEST_GITHUB_TOKEN: "${{ secrets.WHITEPRINT_TEST_GITHUB_TOKEN }}"
        run: |
          nox --force-color --force-python=${{ steps.setup-python.outputs.python-path }}
          [ ! -f .coverage ] || mv .coverage .coverage.${{ matrix.python }}

      - name: Upload coverage data
        if: always() && matrix.session == 'test'
        uses: "actions/upload-artifact@v4"
        with:
          name: coverage-data
          path: ".coverage.*"

      - name: Upload documentation
        if: matrix.session == 'docs-check-urls'
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4.7.1
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true

      - name: Upgrade python environment
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          poetry --version

      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry rich
          nox --version

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: |
          nox --force-color --session=coverage --force-python=${{ steps.setup-python.outputs.python-path }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.5.0
